import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

// Java program to calculate MD5 hash value
public class MD5 {
	public static String getMd5(String input) {
		try {

			// Static getInstance method is called with hashing MD5
			MessageDigest md = MessageDigest.getInstance("MD5");

			// digest() method is called to calculate message digest
			// of an input digest() return array of byte
			byte[] messageDigest = md.digest(input.getBytes());

			// Convert byte array into signum representation
			BigInteger no = new BigInteger(1, messageDigest);

			// Convert message digest into hex value
			String hashtext = no.toString(16);
			while (hashtext.length() < 32) {
				hashtext = "0" + hashtext;
			}
			return hashtext;
		}

		// For specifying wrong message digest algorithms
		catch (NoSuchAlgorithmException e) {
			throw new RuntimeException(e);
		}
	}

	// Driver code
	public static void main(String args[]) throws NoSuchAlgorithmException {
		String s = "TarunKumar";
		System.out.println("Your HashCode Generated by MD5 is: " + getMd5(s));
	}
}

/*
 * 
 * O/P:
 * 
 * Your HashCode Generated by MD5 is: b5add2a44d1d938ef3562a6fd0d16cee
 * 
 */

/*
 * 
 * Description:
 * 
 * To calculate cryptographic hashing value in Java, MessageDigest Class is
 * used, under the package java.security.
 * 
 * MessageDigest Class provides following cryptographic hash function to find
 * hash value of a text, they are: 1. MD5 2. SHA-1 3. SHA-256
 * 
 * This Algorithms are initialize in static method called getInstance(). After
 * selecting the algorithm it calculate the digest value and return the results
 * in byte array.
 * 
 * BigInteger class is used, which converts the resultant byte array into its
 * sign-magnitude representation.
 * 
 * This representation converts into hex format to get the MessageDigest
 *
 */